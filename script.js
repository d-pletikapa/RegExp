document.body.style.backgroundColor = `darkslategray`;

const str = `javascript html css ecmascript #JS 
python php_8 scriptprium react typescript 
4.6 406 4-6 4\\6 –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è 
#methed script #git –≤—ã–ø–æ–ª–Ω–∏ –º—ë—Ä–∂ java`;

// regExp
// const reg = new RegExp('js', 'i');
// const reg2 = /js/i;
// reg.test(str); // (—Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ).(–º–µ—Ç–æ–¥)(–ø–µ—Ä–µ–¥–∞–ª–∏ —Å—Ç—Ä–æ–∫—É)
const regExp1 = /\S+script/g;
const regExp2 = /java\S+/g;

console.log('regExp1 test', regExp1.test(str));
console.log('regExp2 test', regExp2.test(str));
console.log('/test/', /test/.test(str));
console.log('-----------------------');

// exec
const exec1 = regExp1.exec(str);
const exec2 = regExp2.exec(str);
const exec3 = /test/.exec(str);

console.log('üöÄ ~ exec1: ', exec1);
console.log('üöÄ ~ exec2: ', exec2);
console.log('üöÄ ~ exec3:', exec3);
console.log('-----------------------');

// preview: match / search / split / replace
const match1 = str.match(regExp1);
const match2 = str.match(regExp2);
const match3 = str.match(/test/);

console.log('üöÄ ~ match1:', match1);
console.log('üöÄ ~ match2:', match2);
console.log('üöÄ ~ match3:', match3);
console.log('-----------------------');

const replace1 = str.replace(regExp1, '*');
const replace2 = str.replace(regExp2, '*');
const replace3 = str.replace(/\s+\s*/g, '*');

console.log('üöÄ replace1:', replace1);
console.log('üöÄ replace2:', replace2);
console.log('üöÄ replace3:', replace3);
console.log('-----------------------');

// match + replace
// /*/g, - –∏—Å–∫–∞—Ç—å –≤–µ–∑–¥–µ, /*/i, - –Ω–µ —É—á–∏—Ç—ã–≤–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä
// \w /[A-za-z0-9_]/ –ª–∞—Ç–∏–Ω–∏—Ü–∞,
// \s –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫ –∏ –ø—Ä–æ–±–µ–ª—ã ,
// \d –Ω—É–º–µ—Ä–∞—Ü–∏—è
// /^java/ , /java$/ - –∏—Å–∫–∞—Ç—å –≤ –∫–æ–Ω—Ü–µ –∏–ª–∏ –≤ –Ω–∞—á–∞–ª–µ —Å—Ç—Ä–æ–∫–∏
// /\bjava/, /B\java/, /script\b/, /script\B/ –∏—Å–∫–∞—Ç—å –≤ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ —Å–ª–æ–≤–∞
// /yaho?/,  /yah?o/, - –ø—Ä–æ—à–ª—ã–π —Å–∏–º–≤–æ–ª –µ—Å—Ç—å –∏–ª–∏ –Ω–µ—Ç.
// /yaho+/, –ø—Ä–æ—à–ª—ã–π —Å–∏–º–≤–æ–ª –¥–æ–ª–∂–µ–Ω –ø–æ–≤—Ç–æ—Ä–∏—Ç—å—Å—è —Ö–æ—Ç—è–±—ã –æ–¥–∏–Ω —Ä–∞–∑
// /yaho*/, –ø—Ä–æ—à–ª—ã–π —Å–∏–º–≤–æ–ª –æ—Ç 0 –¥–æ max
// /yaho{2}/, /yaho{2,3}/, –ø—Ä–æ—à–ª—ã–π —Å–∏–º–≤–æ–ª –ø–æ–≤—Ç–æ—Ä–∏—Ç—Å—è x —Ä–∞–∑ –∏–ª–∏ {–æ—Ç,–¥–æ}
// /<[^>]+>/ , - —Å–¥–µ–ª–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –∂–∞–¥–Ω–æ–º—É –∫–≤–∞–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É
// /<.+?>/ , - –æ—Ç—É—á–∏—Ç—å –æ—Ç –∂–∞–¥–Ω–æ—Å—Ç–∏ '+'
// /gray|grow/g,
// /gray|grow/,
// /gr(ay|ow)/g,
// /gr(a|e)y/g, /gr[ae]y/g,- –∏–ª–∏, –∏–ª–∏ —Å –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–æ–π
// /(ta|tu)-\1/g, –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å (—Å–∏–º–≤–æ–ª—ã –ø–µ—Ä–≤–æ–π –≥—Ä—É–ø–ø—ã)
// /(?<name>ta|tu)-\k<name>/g, –∫–ª—é—á –≥—Ä—É–ø–ø—ã

const regExp = /\W/g;
const match = str.match(regExp, '*');
console.log('üöÄ ~ file: script.js:66 ~ match:', match);
const replace = str.replace(regExp, '*');
console.log('üöÄ ~ file: script.js:68 ~ replace:', replace);
console.log('str', str);

// –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
const input = document.getElementById('input');

input.addEventListener('input', () => {
  input.textContent = input.value.replace(/(\w+)@(\w+)\.(\w+)/g,
      (...str) => str.toUpperCase(str));
});
